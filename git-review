#!/usr/bin/env python

import sys, subprocess, argparse

REVIEW_FLAG_REF = "review-flag"

class CommandFailedError(Exception):
    pass

def list_review_flags():
    revflags = None
    try:
        revflags = subprocess.check_output(["git", "notes", 
            "--ref=refs/notes/%s" % (REVIEW_FLAG_REF,), "list"])
    except subprocess.CalledProcessError as e:
        raise CommandFailedError("could not get list of review flags: %s" % (e.strerror,))
    if revflags:
        pass
    return [l.strip().split() for l in revflags.split("\n") if l]

def show_object(sha):
    out = None
    try:
        out = subprocess.check_output(["git", "show", sha])
    except subprocess.CalledProcessError as e:
        raise CommandFailedError("could not fetch object %s: %s" % (sha, e.strerror))
    return out

def impl_list(args):
    print [(f[1], int(show_object(f[0]).strip())) for f in list_review_flags()]
    return True

def impl_show(args):
    print "show obj goes here"
    return True

if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        prog='git-review',
        description='lamplighter: keeping the lights on')

    cmdparser = parser.add_subparsers(title='git-review commands')
    list_parser = cmdparser.add_parser('list')
    list_parser.set_defaults(func=impl_list)

    show_parser = cmdparser.add_parser('show')
    show_parser.set_defaults(func=impl_show)

    args = parser.parse_args()
    args.func(args)
